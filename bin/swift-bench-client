#!/usr/bin/env python
# Copyright (c) 2010-2012 OpenStack, LLC.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import logging
import sys
import signal
from optparse import OptionParser

from swift.common.bench import BenchServer
from swift.common.utils import LogAdapter

if __name__ == '__main__':
    usage = "usage: %prog <ip> <port>"
    usage += "\n\nRun a client for distributed swift-bench runs."
    parser = OptionParser(usage=usage)
    parser.add_option('-o', '--log-level', dest='log_level',
                      default='info',
                      help='Logging level (debug, info, etc)')

    if len(sys.argv) != 3:
        parser.print_help()
        sys.exit(1)
    options, args = parser.parse_args()

    logger = logging.getLogger()
    logger.setLevel({
        'debug': logging.DEBUG,
        'info': logging.INFO,
        'warning': logging.WARNING,
        'error': logging.ERROR,
        'critical': logging.CRITICAL}.get(
            options.log_level.lower(), logging.INFO))
    loghandler = logging.StreamHandler()
    logger.addHandler(loghandler)
    logger = LogAdapter(logger, 'swift-bench-client')
    logformat = logging.Formatter('%(server)s %(asctime)s %(levelname)s '
                                  '%(message)s')
    loghandler.setFormatter(logformat)

    def sigterm(signum, frame):
        sys.exit('Termination signal received.')
    signal.signal(signal.SIGTERM, sigterm)
    signal.signal(signal.SIGINT, sigterm)

    server = BenchServer(logger, args[0], args[1])
    server.run()
